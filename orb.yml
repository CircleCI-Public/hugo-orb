version: 2.1

description: |
  Common CircleCI tasks for Hugo.
  Source: https://github.com/CircleCI-Public/hugo-orb/

orbs:
  detect: circleci/os-detect@0.1.1

executors:
  cibuilds:
    description: "The cibuilds/hugo Docker image."
    parameters:
      tag:
        description: "The `cibuilds/hugo` Docker image version tag."
        type: string
        default: "latest"
    docker:
      - image: cibuilds/hugo:<< parameters.tag >>

commands:
  install:
    description: "Install the Hugo binary into your build."
    parameters:
      version:
        description: "The Hugo version."
        type: string
      extended:
        description: "Install the Hugo extended binary?"
        type: boolean
        default: true
    steps:
      - detect/init
      - run:
          name: "Install Hugo"
          command: |
            case $OSD_FAMILY in
              linux)
                OS=Linux
                PKG_EXT=tar.gz
                ;;
              darwin)
                OS=macOS
                PKG_EXT=tar.gz
                ;;
              *)
                echo "Unsupported operating system."
                exit 1
                ;;
            esac

            # If we're in Alpine, install additional compatibility packages.
            if [[ $OSD_ID == "alpine" ]]; then
              apk add build-base curl libcurl libc6-compat libxml2-dev libxslt-dev
            fi

            if [ << parameters.extended >> = true ]; then
              HUGO_EXTENDED="_extended"
            else
              HUGO_EXTENDED=""
            fi

            HUGO_URL=https://github.com/gohugoio/hugo/releases/download/v<< parameters.version >>/hugo${HUGO_EXTENDED}_<< parameters.version >>_${OS}-64bit.${PKG_EXT}

            curl -sSL "$HUGO_URL" | tar -xz -C /usr/local/bin hugo
  hugo-build:
    description: "Builds with Hugo a static site located at 'source'. The default is '.'."
    parameters:
      source:
        description: "Path to Hugo root relative to working_directory."
        type: string
        default: "."
      destination:
        description: "Path to where Hugo outputs generated site. Relative to `source`."
        type: string
        default: "public"
      hugo-env:
        description: "Set the value of HUGO_ENV prior to running Hugo."
        type: string
        default: "production"
      extra-flags:
        description: "Additional flags to pass when running Hugo (e.g. -DF)."
        type: string
        default: ""
    steps:
      - run:
          name: "Build with Hugo"
          command: "HUGO_ENV=<< parameters.hugo-env >> hugo -v -s << parameters.source >> -d << parameters.destination >> << parameters.extra-flags >>"
  html-proofer:
    description: "Runs HTML Proofer on 'path' to check for html errors. Ruby and the `html-proofer` gem must already be installed to use."
    parameters:
      path:
        description: "Path to generated files relative to working_directory."
        type: string
    steps:
      - run:
          name: "Test generated website with HTML Proofer."
          command: "htmlproofer << parameters.path >> --allow-hash-href --check-html --empty-alt-ignore --disable-external"

jobs:
  build:
    description: "Build a site with Hugo."
    executor:
      name: cibuilds
      tag: << parameters.version >>
    parameters:
      version:
        description: "Hugo version to use. Defaults to latest."
        type: string
        default: latest
      source:
        description: "Path to Hugo root relative to working_directory."
        type: string
        default: "."
      destination:
        description: "Path to where Hugo outputs generated site. Relative to `source`."
        type: string
        default: "public"
      html-proofer:
        description: "Whether or not to test the outputted HTML with HTML Proofer."
        type: boolean
        default: true
      persist-to-workspace:
        description: "Whether to persist generated files to a CircleCI Workspace. This uses `parameters.source` as root and `parameters.publishdir` as the path."
        type: boolean
        default: true
      hugo-env:
        description: "Set the value of HUGO_ENV prior to running Hugo."
        type: string
        default: "production"
      hugo-extra-flags:
        description: "Additional flags to pass when running Hugo (e.g. -DF)."
        type: string
        default: ""
    steps:
      - checkout
      - run:
          name: "Checkout Submodules if Needed"
          command: |
            if [ -f ".gitmodules" ]; then
              git submodule sync
              git submodule update --init --recursive
            fi
      - hugo-build:
          source: "<< parameters.source >>"
          destination: "<< parameters.destination >>"
          extra-flags: "<< parameters.hugo-extra-flags >>"
      - when:
          condition: << parameters.html-proofer >>
          steps:
            - html-proofer:
                path: "<< parameters.source >>/<< parameters.destination >>"
      - when:
          condition: << parameters.persist-to-workspace >>
          steps:
            - persist_to_workspace:
                root: "<< parameters.source >>"
                paths:
                  - "<< parameters.destination >>"

examples:
  build-and-test:
    description: |
      "The simplest example of using the Hugo orb."
    usage:
      version: 2.1
      orbs:
        hugo: circleci/hugo@0.1
      workflows:
        main:
          jobs:
            - hugo/build:
                version: "0.55"
                html-proofer: true
  build-test-deploy:
    description: |
      "An example of building a Hugo site, testing with HTML Proofer, and deployng it. Here the Hugo source is in a subdirectory called 'src'. The deploy job is empty and serves as an example. Instead of the 'ls' command, you'd want to deploy the files using whatever tools you're used to."
    usage:
      version: 2.1
      orbs:
        hugo: circleci/hugo@0.2
      workflows:
        main:
          jobs:
            - hugo/build:
                version: "0.55"
                source: "src/"
                html-proofer: true
            - deploy:
                requires:
                  - hugo/build
                filters:
                  branches:
                    only: master
      jobs:
        deploy:
          docker:
            - image: cibuilds/base
          steps:
            - attach_workspace:
                at: my-site
            # A real deploy command should be below.
            - run: ls -lah my-site
